name: Flutter Web Deploy to GitHub Pages

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Setup Java (required for Flutter)
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.5'
          channel: 'stable'
          cache: true

      # 4. Check Flutter installation
      - name: Check Flutter installation
        run: |
          flutter --version
          flutter doctor -v

      # 5. Cache Flutter dependencies
      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ./def_order_app/.dart_tool
            ./def_order_app/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      # 5. Download Korean fonts for PDF generation
      - name: Setup Korean fonts
        working-directory: ./def_order_app
        run: |
          # Create fonts directory
          mkdir -p assets/fonts
          
          # Download NanumGothic font (used for PDF Korean text)
          echo "Downloading Korean fonts..."
          wget -q -O nanum.zip https://github.com/google/fonts/raw/main/ofl/nanumgothic/NanumGothic-Regular.ttf
          
          # Alternative: Download from Naver if Google Fonts fails
          if [ ! -f "NanumGothic-Regular.ttf" ]; then
            wget -q "https://hangeul.naver.com/hangeulfont/NanumFont/NanumGothic.ttf" -O assets/fonts/NanumGothic.ttf || \
            wget -q "https://github.com/naver/nanumfont/raw/master/fonts/NanumGothic/NanumGothic.ttf" -O assets/fonts/NanumGothic.ttf || \
            echo "Warning: Could not download Korean font"
          else
            mv NanumGothic-Regular.ttf assets/fonts/NanumGothic.ttf
          fi
          
          # Create fallback font if download failed
          if [ ! -f "assets/fonts/NanumGothic.ttf" ]; then
            echo "Creating placeholder font file..."
            touch assets/fonts/NanumGothic.ttf
          fi
          
          ls -la assets/fonts/

      # 6. Install Flutter dependencies
      - name: Install dependencies
        working-directory: ./def_order_app
        run: |
          flutter pub get

      # 7. Run code generation (for Freezed, JsonSerializable, Riverpod)
      - name: Run code generation
        working-directory: ./def_order_app
        run: |
          flutter pub run build_runner build --delete-conflicting-outputs || true

      # 8. Run Flutter analyze
      - name: Analyze code
        working-directory: ./def_order_app
        run: |
          flutter analyze || true

      # 9. Run tests (if any)
      - name: Run tests
        working-directory: ./def_order_app
        run: |
          flutter test || echo "No tests found or tests failed (continuing build)"

      # 10. Build Flutter web with demo mode
      - name: Build Flutter web
        working-directory: ./def_order_app
        run: |
          flutter build web --release \
            --dart-define=IS_DEMO=true \
            --base-href /${{ github.event.repository.name }}/ \
            --web-renderer html

      # 11. Setup Pages
      - name: Setup Pages
        if: github.ref == 'refs/heads/main'
        uses: actions/configure-pages@v4

      # 12. Upload artifact
      - name: Upload artifact
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: './def_order_app/build/web'

      # 13. Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        id: deployment
        uses: actions/deploy-pages@v4

      # 14. Output deployment URL
      - name: Output deployment URL
        if: github.ref == 'refs/heads/main'
        run: |
          echo "ðŸš€ Deployment successful!"
          echo "ðŸ“± PWA deployed to: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/"
          echo "ðŸ‘¤ Demo accounts:"
          echo "   - Dealer: dealer@demo.com / demo1234"
          echo "   - General: general@demo.com / demo1234"